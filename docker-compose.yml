services:
  # fastapi:
  #   build: .
  #   container_name: fastapi
  #   environment:
  #     - database_url=postgresql+asyncpg://postgres:123456@postgres/schedule
  #     - sync_database_url=postgresql+psycopg://postgres:123456@postgres/schedule
  #     - redis_url=redis://redis:6379
  #     - LOKI_ENDPOINT=http://loki:3100/loki/api/v1/push
  #   ports:
  #     - "8082:8082"
  #   depends_on:
  #     - postgres
  #     - redis
  #     - prometheus
  #   networks:
  #     - general

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=123456
      - POSTGRES_USER=postgres
      - POSTGRES_DB=schedule
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - general

  redis:
    image: redis:7.2.5-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - general


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - general

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - 3000:3000
  #   environment:
  #     TZ: ${SYSTEM_TIMEZONE:-Europe/Moscow}
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   depends_on:
  #     - loki
  #   networks:
  #     - general

  # loki:
  #   image: grafana/loki:latest
  #   ports:
  #     - "3100:3100"
  #   environment:
  #     TZ: ${SYSTEM_TIMEZONE:-Europe/Moscow}
  #   networks:
  #     - general

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  general:
    driver: bridge
